manifest {
  description = 'filter GWAS sumstats by given variants (optionally + manha/qq + tabix)'
  nextflowVersion = '>=21.10.6'
}

tower {
  accessToken = "$TOWER_ACCESS_TOKEN"
  endpoint = 'http://0.0.0.0:8000/api'
  enabled = true
}

profiles {

  gls {

      workDir = "$TOWER_WORKDIR"
      mail {
          from = "$TOWER_MAIL_FROM"
          smtp.host = "$TOWER_MAIL_HOST"
          smtp.port = "$TOWER_MAIL_PORT"
          smtp.user = "$TOWER_MAIL_USER"
          smtp.password = "$TOWER_MAIL_PASS"
      }
      process.executor = 'google-lifesciences'
      process.cache = 'lenient'
      process.cpus = 1
      // retry when preempted (10) or aborted/preempted (14) or 127 possibly file copy issue (127)
      // otherwise terminate workflow allowing submitted tasks to finish
      // https://cloud.google.com/life-sciences/docs/troubleshooting
      process.errorStrategy = { task.exitStatus == 127 || task.exitStatus == 14 || task.exitStatus == 10 ? 'retry' : 'finish' }
      process.maxRetries = 3
      executor.queueSize = 100000
      google.region  = 'europe-west1'
      google.location = 'europe-west4'
      google.project = "$TOWER_GOOGLE_PROJECT"
      google.lifeSciences.serviceAccountEmail = "$TOWER_GOOGLE_SERVACC"
      google.lifeSciences.network = 'default'
      google.lifeSciences.subnetwork = 'default'
      google.lifeSciences.bootDiskSize = 15.GB
      google.lifeSciences.preemptible = true
      google.lifeSciences.usePrivateAddress = true
      google.lifeSciences.sshDaemon = false
      google.lifeSciences.keepAliveOnFailure = false
      google.lifeSciences.debug = false
      google.storage.maxParallelTransfers = 10
      google.storage.parallelThreadCount = 4
      google.storage.downloadMaxComponents = 8
      google.storage.delayBetweenAttempts = 300

      params.outdir = "gs://r10-data/regenie/release/summary_stats_coding_INFO_06"
      process.container = 'eu.gcr.io/finngen-refinery-dev/saige:0.39.1-fg-pysam'
      params.files = "gs://r10-data/regenie/release/summary_stats/*.gz"
      params.variants = "gs://r10-data/annotation/R10_annotated_variants_v2.coding.INFO_0.6.variants.gz"
  }
}
